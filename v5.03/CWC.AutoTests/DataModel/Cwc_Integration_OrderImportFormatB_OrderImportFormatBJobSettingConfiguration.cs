// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSetting>
    {
        public Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSettingConfiguration()
            : this("dbo")
        {
        }

        public Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSettingConfiguration(string schema)
        {
            ToTable("Cwc_Integration_OrderImportFormatB_OrderImportFormatBJobSettings", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PostcodesIncomingFileFolder).HasColumnName(@"PostcodesIncomingFileFolder").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.IncomingFileFolder).HasColumnName(@"IncomingFileFolder").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.IncomingFilePrefix).HasColumnName(@"IncomingFilePrefix").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.LastFileSequenceNumber).HasColumnName(@"LastFileSequenceNumber").HasColumnType("int").IsRequired();
            Property(x => x.IsCreateVisitAddress).HasColumnName(@"IsCreateVisitAddress").HasColumnType("bit").IsRequired();
            Property(x => x.VisitAddressPrefix).HasColumnName(@"VisitAddressPrefix").HasColumnType("nvarchar").IsOptional().HasMaxLength(5);
            Property(x => x.VisitAddressSuffixMask).HasColumnName(@"VisitAddressSuffixMask").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.VisitAddressLastSuffix).HasColumnName(@"VisitAddressLastSuffix").HasColumnType("int").IsRequired();
            Property(x => x.ServicePointPrefix).HasColumnName(@"ServicePointPrefix").HasColumnType("nvarchar").IsRequired().HasMaxLength(5);
            Property(x => x.ServicePointSuffixMask).HasColumnName(@"ServicePointSuffixMask").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.ServicePointLastSuffix).HasColumnName(@"ServicePointLastSuffix").HasColumnType("int").IsRequired();
            Property(x => x.OutgoingFileFolder).HasColumnName(@"OutgoingFileFolder").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.OutgoingFilePrefix).HasColumnName(@"OutgoingFilePrefix").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.CompanyID).HasColumnName(@"CompanyID").HasColumnType("int").IsOptional();
            Property(x => x.OrderingDepartmentID).HasColumnName(@"OrderingDepartmentID").HasColumnType("int").IsOptional();
            Property(x => x.ServiceTypeID).HasColumnName(@"ServiceTypeID").HasColumnType("int").IsOptional();
            Property(x => x.LocationTypeID).HasColumnName(@"LocationTypeID").HasColumnType("int").IsOptional();
            Property(x => x.HandlingTypeID).HasColumnName(@"HandlingTypeID").HasColumnType("nvarchar").IsOptional().HasMaxLength(6);
            Property(x => x.CashPointTypeID).HasColumnName(@"CashPointTypeID").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
