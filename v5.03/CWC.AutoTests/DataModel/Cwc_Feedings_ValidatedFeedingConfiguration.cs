// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // Cwc_Feedings_ValidatedFeeding
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class Cwc_Feedings_ValidatedFeedingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cwc_Feedings_ValidatedFeeding>
    {
        public Cwc_Feedings_ValidatedFeedingConfiguration()
            : this("dbo")
        {
        }

        public Cwc_Feedings_ValidatedFeedingConfiguration(string schema)
        {
            ToTable("Cwc_Feedings_ValidatedFeeding", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.FeedingDate).HasColumnName(@"FeedingDate").HasColumnType("datetime").IsRequired();
            Property(x => x.ValidationResult).HasColumnName(@"ValidationResult").HasColumnType("int").IsRequired();
            Property(x => x.Warning).HasColumnName(@"Warning").HasColumnType("bit").IsRequired();
            Property(x => x.Content).HasColumnName(@"Content").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.ErrorMessage).HasColumnName(@"ErrorMessage").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.User_id).HasColumnName(@"User_id").HasColumnType("int").IsOptional();
            Property(x => x.DeliveryMethod).HasColumnName(@"DeliveryMethod").HasColumnType("int").IsRequired();
            Property(x => x.Login).HasColumnName(@"Login").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.Hash).HasColumnName(@"Hash").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.IPAddress).HasColumnName(@"IPAddress").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.FileName).HasColumnName(@"FileName").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.EntityType).HasColumnName(@"EntityType").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.ResponseContent).HasColumnName(@"ResponseContent").HasColumnType("ntext").IsOptional().IsMaxLength();
            Property(x => x.SenderID).HasColumnName(@"SenderID").HasColumnType("int").IsOptional();
            Property(x => x.MapperID).HasColumnName(@"MapperID").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
