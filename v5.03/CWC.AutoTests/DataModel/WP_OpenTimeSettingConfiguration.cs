// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_OpenTimeSettings
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_OpenTimeSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_OpenTimeSetting>
    {
        public WP_OpenTimeSettingConfiguration()
            : this("dbo")
        {
        }

        public WP_OpenTimeSettingConfiguration(string schema)
        {
            ToTable("WP_OpenTimeSettings", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Default).HasColumnName(@"Default").HasColumnType("bit").IsRequired();
            Property(x => x.Customer).HasColumnName(@"Customer").HasColumnType("decimal").IsOptional().HasPrecision(15,0);
            Property(x => x.LocationType).HasColumnName(@"LocationType").HasColumnType("nvarchar").IsOptional().HasMaxLength(16);
            Property(x => x.Location).HasColumnName(@"Location").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.AuthorId).HasColumnName(@"AuthorId").HasColumnType("int").IsRequired();
            Property(x => x.EditorId).HasColumnName(@"EditorId").HasColumnType("int").IsRequired();
            Property(x => x.Open24x7).HasColumnName(@"Open24x7").HasColumnType("bit").IsRequired();
            Property(x => x.Level).HasColumnName(@"Level").HasColumnType("int").IsRequired();
            Property(x => x.ParentOpenTimeSettingID).HasColumnName(@"ParentOpenTimeSettingID").HasColumnType("int").IsOptional();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
        }
    }

}
// </auto-generated>
