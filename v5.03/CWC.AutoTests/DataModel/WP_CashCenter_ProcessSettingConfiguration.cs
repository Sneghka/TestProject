// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CashCenter_ProcessSetting
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CashCenter_ProcessSettingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CashCenter_ProcessSetting>
    {
        public WP_CashCenter_ProcessSettingConfiguration()
            : this("dbo")
        {
        }

        public WP_CashCenter_ProcessSettingConfiguration(string schema)
        {
            ToTable("WP_CashCenter_ProcessSetting", schema);
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Default).HasColumnName(@"Default").HasColumnType("bit").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.ConfirmationUnpacking).HasColumnName(@"ConfirmationUnpacking").HasColumnType("int").IsRequired();
            Property(x => x.IsCapturingAllowed).HasColumnName(@"IsCapturingAllowed").HasColumnType("bit").IsRequired();
            Property(x => x.IsCaptureTotals).HasColumnName(@"IsCaptureTotals").HasColumnType("bit").IsRequired();
            Property(x => x.IsCaptureWeight).HasColumnName(@"IsCaptureWeight").HasColumnType("bit").IsRequired();
            Property(x => x.IsForceBulkCount).HasColumnName(@"IsForceBulkCount").HasColumnType("bit").IsRequired();
            Property(x => x.AuthorID).HasColumnName(@"AuthorID").HasColumnType("int").IsOptional();
            Property(x => x.EditorId).HasColumnName(@"EditorId").HasColumnType("int").IsOptional();
            Property(x => x.CustomerId).HasColumnName(@"CustomerId").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.LocationTypeCode).HasColumnName(@"LocationTypeCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(16);
            Property(x => x.LocationId).HasColumnName(@"LocationId").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.IsApplyStockUnit).HasColumnName(@"IsApplyStockUnit").HasColumnType("bit").IsRequired();
            Property(x => x.AllocationMethod).HasColumnName(@"AllocationMethod").HasColumnType("int").IsRequired();
            Property(x => x.IsReconcileMotherDeposit).HasColumnName(@"IsReconcileMotherDeposit").HasColumnType("bit").IsRequired();
            Property(x => x.IsElectronicPreannouncement).HasColumnName(@"IsElectronicPreannouncement").HasColumnType("bit").IsRequired();
            Property(x => x.AnomalyCodeID).HasColumnName(@"AnomalyCodeID").HasColumnType("int").IsOptional();
            Property(x => x.IsMotherDepositOnly).HasColumnName(@"IsMotherDepositOnly").HasColumnType("bit").IsRequired();
            Property(x => x.IsSeparateCapturing).HasColumnName(@"IsSeparateCapturing").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeclaredValueMandatory).HasColumnName(@"IsDeclaredValueMandatory").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeclaredValuesCounting).HasColumnName(@"IsDeclaredValuesCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsCaptureChequeDetails).HasColumnName(@"IsCaptureChequeDetails").HasColumnType("bit").IsRequired();
            Property(x => x.PackingBarcodeFormatID).HasColumnName(@"PackingBarcodeFormatID").HasColumnType("int").IsOptional();
            Property(x => x.IsBankAccountLeading).HasColumnName(@"IsBankAccountLeading").HasColumnType("bit").IsRequired();
            Property(x => x.IsCountInnersDirectly).HasColumnName(@"IsCountInnersDirectly").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowReferencesCounting).HasColumnName(@"IsShowReferencesCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowInnersCounting).HasColumnName(@"IsShowInnersCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsDeclaredValueMandatoryCapturing).HasColumnName(@"IsDeclaredValueMandatoryCapturing").HasColumnType("bit").IsRequired();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IsAutomaticallyConfirmCapturing).HasColumnName(@"IsAutomaticallyConfirmCapturing").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowCustomerReference).HasColumnName(@"IsShowCustomerReference").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowBankReference).HasColumnName(@"IsShowBankReference").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowCitReference).HasColumnName(@"IsShowCitReference").HasColumnType("bit").IsRequired();
            Property(x => x.CustomerReferenceText).HasColumnName(@"CustomerReferenceText").HasColumnType("nvarchar").IsOptional().HasMaxLength(12);
            Property(x => x.IsValidateBankAccount).HasColumnName(@"IsValidateBankAccount").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowHolderName).HasColumnName(@"IsShowHolderName").HasColumnType("bit").IsRequired();
            Property(x => x.IsValidateBankAccountCounting).HasColumnName(@"IsValidateBankAccountCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsShowHolderNameCounting).HasColumnName(@"IsShowHolderNameCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsBankAccountLeadingCounting).HasColumnName(@"IsBankAccountLeadingCounting").HasColumnType("bit").IsRequired();
            Property(x => x.IsDisableInnersLocationFrom).HasColumnName(@"IsDisableInnersLocationFrom").HasColumnType("bit").IsRequired();
            Property(x => x.CashPointTypeID).HasColumnName(@"CashPointTypeID").HasColumnType("int").IsOptional();
            Property(x => x.VisitAddressID).HasColumnName(@"VisitAddressID").HasColumnType("int").IsOptional();
            Property(x => x.IsLooseProductsPacking).HasColumnName(@"IsLooseProductsPacking").HasColumnType("bit").IsOptional();
        }
    }

}
// </auto-generated>
