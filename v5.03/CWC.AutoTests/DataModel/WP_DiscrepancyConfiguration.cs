// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_Discrepancy
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_DiscrepancyConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_Discrepancy>
    {
        public WP_DiscrepancyConfiguration()
            : this("dbo")
        {
        }

        public WP_DiscrepancyConfiguration(string schema)
        {
            ToTable("WP_Discrepancy", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Level).HasColumnName(@"Level").HasColumnType("int").IsRequired();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.IsTotal).HasColumnName(@"IsTotal").HasColumnType("bit").IsRequired();
            Property(x => x.DiscrepancyValue).HasColumnName(@"DiscrepancyValue").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.InitialValue).HasColumnName(@"InitialValue").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.ActualValue).HasColumnName(@"ActualValue").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.CorrectionValue).HasColumnName(@"CorrectionValue").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.Loc_nr).HasColumnName(@"Loc_nr").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.Order_ID).HasColumnName(@"Order_ID").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.MaterialID).HasColumnName(@"MaterialID").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.ProductCode).HasColumnName(@"ProductCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.CurrencyCode).HasColumnName(@"CurrencyCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(3);
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
            Property(x => x.DateOccurred).HasColumnName(@"DateOccurred").HasColumnType("datetime").IsRequired();
            Property(x => x.TopLevelDiscrepancyID).HasColumnName(@"TopLevelDiscrepancyID").HasColumnType("bigint").IsOptional();
            Property(x => x.ContainersBatchID).HasColumnName(@"ContainersBatchID").HasColumnType("bigint").IsOptional();
            Property(x => x.StockLocationID).HasColumnName(@"StockLocationID").HasColumnType("int").IsOptional();
            Property(x => x.StockContainerID).HasColumnName(@"StockContainerID").HasColumnType("bigint").IsOptional();
            Property(x => x.QualificationType).HasColumnName(@"QualificationType").HasColumnType("int").IsOptional();
            Property(x => x.StockOwnerID).HasColumnName(@"StockOwnerID").HasColumnType("int").IsOptional();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsOptional();
            Property(x => x.AuthorID).HasColumnName(@"AuthorID").HasColumnType("int").IsOptional();
            Property(x => x.EditorID).HasColumnName(@"EditorID").HasColumnType("int").IsOptional();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.DailyHeaderCardID).HasColumnName(@"DailyHeaderCardID").HasColumnType("int").IsOptional();
            Property(x => x.DispensedValue).HasColumnName(@"DispensedValue").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.DiscrepancyQuantity).HasColumnName(@"DiscrepancyQuantity").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.InitialQuantity).HasColumnName(@"InitialQuantity").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.ActualQuantity).HasColumnName(@"ActualQuantity").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.DispensedQuantity).HasColumnName(@"DispensedQuantity").HasColumnType("decimal").IsRequired().HasPrecision(18,0);
            Property(x => x.DiscrepancyPreviousID).HasColumnName(@"DiscrepancyPreviousID").HasColumnType("bigint").IsOptional();
        }
    }

}
// </auto-generated>
