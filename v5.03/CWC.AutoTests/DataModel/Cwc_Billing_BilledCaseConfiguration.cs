// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // Cwc_Billing_BilledCase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class Cwc_Billing_BilledCaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cwc_Billing_BilledCase>
    {
        public Cwc_Billing_BilledCaseConfiguration()
            : this("dbo")
        {
        }

        public Cwc_Billing_BilledCaseConfiguration(string schema)
        {
            ToTable("Cwc_Billing_BilledCase", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.PriceRule).HasColumnName(@"PriceRule").HasColumnType("int").IsRequired();
            Property(x => x.UnitOfMeasure).HasColumnName(@"UnitOfMeasure").HasColumnType("int").IsRequired();
            Property(x => x.ActualUnits).HasColumnName(@"ActualUnits").HasColumnType("decimal").IsRequired().HasPrecision(18,2);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateBilled).HasColumnName(@"DateBilled").HasColumnType("datetime").IsOptional();
            Property(x => x.PeriodBilledFrom).HasColumnName(@"PeriodBilledFrom").HasColumnType("datetime").IsOptional();
            Property(x => x.PeriodBilledTo).HasColumnName(@"PeriodBilledTo").HasColumnType("datetime").IsOptional();
            Property(x => x.CompanyID).HasColumnName(@"CompanyID").HasColumnType("int").IsRequired();
            Property(x => x.LocationID).HasColumnName(@"LocationID").HasColumnType("int").IsOptional();
            Property(x => x.VisitAddressID).HasColumnName(@"VisitAddressID").HasColumnType("int").IsOptional();
            Property(x => x.ContractID).HasColumnName(@"ContractID").HasColumnType("int").IsRequired();
            Property(x => x.BillingJobLogID).HasColumnName(@"BillingJobLogID").HasColumnType("int").IsRequired();
            Property(x => x.PriceLineID).HasColumnName(@"PriceLineID").HasColumnType("int").IsOptional();
            Property(x => x.DailyStopID).HasColumnName(@"DailyStopID").HasColumnType("int").IsOptional();
            Property(x => x.DailyStopJobID).HasColumnName(@"DailyStopJobID").HasColumnType("int").IsOptional();
            Property(x => x.MasterRouteCode).HasColumnName(@"MasterRouteCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.ServiceTypeID).HasColumnName(@"ServiceTypeID").HasColumnType("int").IsOptional();
            Property(x => x.ContainerTypeID).HasColumnName(@"ContainerTypeID").HasColumnType("int").IsOptional();
            Property(x => x.ServiceOrderID).HasColumnName(@"ServiceOrderID").HasColumnType("int").IsOptional();
            Property(x => x.StockOrderID).HasColumnName(@"StockOrderID").HasColumnType("bigint").IsOptional();
            Property(x => x.StockContainerID).HasColumnName(@"StockContainerID").HasColumnType("bigint").IsOptional();
            Property(x => x.MaterialID).HasColumnName(@"MaterialID").HasColumnType("int").IsOptional();
            Property(x => x.ProductID).HasColumnName(@"ProductID").HasColumnType("int").IsOptional();
            Property(x => x.ProcessingReasonCodeID).HasColumnName(@"ProcessingReasonCodeID").HasColumnType("int").IsOptional();
            Property(x => x.LocationGroupID).HasColumnName(@"LocationGroupID").HasColumnType("int").IsOptional();
            Property(x => x.ProductGroupID).HasColumnName(@"ProductGroupID").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
