// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CoinMachine
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CoinMachineConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CoinMachine>
    {
        public WP_CoinMachineConfiguration()
            : this("dbo")
        {
        }

        public WP_CoinMachineConfiguration(string schema)
        {
            ToTable("WP_CoinMachine", schema);
            HasKey(x => x.MachineId);

            Property(x => x.MachineId).HasColumnName(@"MachineId").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("nvarchar").IsRequired().HasMaxLength(128);
            Property(x => x.IpAddress).HasColumnName(@"IpAddress").HasColumnType("nvarchar").IsOptional().HasMaxLength(50);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsOptional();
            Property(x => x.MachineModelId).HasColumnName(@"MachineModelId").HasColumnType("int").IsRequired();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsOptional();
            Property(x => x.Comment).HasColumnName(@"Comment").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.LocationId).HasColumnName(@"LocationId").HasColumnType("numeric").IsRequired().HasPrecision(15,0);
            Property(x => x.OwnerId).HasColumnName(@"OwnerId").HasColumnType("numeric").IsRequired().HasPrecision(15,0);
            Property(x => x.SupplierId).HasColumnName(@"SupplierId").HasColumnType("numeric").IsRequired().HasPrecision(15,0);
            Property(x => x.AuthorId).HasColumnName(@"AuthorId").HasColumnType("int").IsOptional();
            Property(x => x.EditorId).HasColumnName(@"EditorId").HasColumnType("int").IsOptional();
            Property(x => x.Category).HasColumnName(@"Category").HasColumnType("int").IsOptional();
            Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar").IsRequired().HasMaxLength(50);
            Property(x => x.Optimization).HasColumnName(@"Optimization").HasColumnType("tinyint").IsRequired();
            Property(x => x.IndividualStockConfiguration).HasColumnName(@"IndividualStockConfiguration").HasColumnType("bit").IsRequired();
            Property(x => x.OrderOnTotal).HasColumnName(@"OrderOnTotal").HasColumnType("int").IsOptional();
            Property(x => x.RemainderOfStockPerCassette).HasColumnName(@"RemainderOfStockPerCassette").HasColumnType("int").IsRequired();
            Property(x => x.OrderMandatory).HasColumnName(@"OrderMandatory").HasColumnType("bit").IsRequired();
            Property(x => x.ServiceTypeCollectDeliver).HasColumnName(@"ServiceTypeCollectDeliver").HasColumnType("int").IsOptional();
            Property(x => x.ServiceTypeCollectOnly).HasColumnName(@"ServiceTypeCollectOnly").HasColumnType("int").IsOptional();
            Property(x => x.ForceConfirmation).HasColumnName(@"ForceConfirmation").HasColumnType("bit").IsRequired();
            Property(x => x.Replenishment).HasColumnName(@"Replenishment").HasColumnType("int").IsRequired();
            Property(x => x.AllowStockExpiration).HasColumnName(@"AllowStockExpiration").HasColumnType("int").IsRequired();
            Property(x => x.DateOrderCreationStart).HasColumnName(@"DateOrderCreationStart").HasColumnType("datetime").IsOptional();
            Property(x => x.IsAllowManualTransactions).HasColumnName(@"IsAllowManualTransactions").HasColumnType("bit").IsRequired();
        }
    }

}
// </auto-generated>
