// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CM_DailyStockRecord
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CM_DailyStockRecordConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CM_DailyStockRecord>
    {
        public WP_CM_DailyStockRecordConfiguration()
            : this("dbo")
        {
        }

        public WP_CM_DailyStockRecordConfiguration(string schema)
        {
            ToTable("WP_CM_DailyStockRecord", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.StockDate).HasColumnName(@"StockDate").HasColumnType("datetime").IsRequired();
            Property(x => x.Direction).HasColumnName(@"Direction").HasColumnType("int").IsRequired();
            Property(x => x.CassetteNumber).HasColumnName(@"CassetteNumber").HasColumnType("int").IsRequired();
            Property(x => x.Capacity).HasColumnName(@"Capacity").HasColumnType("int").IsRequired();
            Property(x => x.QuantityDayTurnover).HasColumnName(@"QuantityDayTurnover").HasColumnType("int").IsRequired();
            Property(x => x.ForecastAverage).HasColumnName(@"ForecastAverage").HasColumnType("int").IsRequired();
            Property(x => x.ForecastCorrelation).HasColumnName(@"ForecastCorrelation").HasColumnType("int").IsOptional();
            Property(x => x.ErrorAverage).HasColumnName(@"ErrorAverage").HasColumnType("int").IsRequired();
            Property(x => x.ErrorCorrelation).HasColumnName(@"ErrorCorrelation").HasColumnType("int").IsOptional();
            Property(x => x.ForecastMethod).HasColumnName(@"ForecastMethod").HasColumnType("int").IsRequired();
            Property(x => x.ForecastIgnore).HasColumnName(@"ForecastIgnore").HasColumnType("bit").IsRequired();
            Property(x => x.ActualWeekNumber).HasColumnName(@"ActualWeekNumber").HasColumnType("int").IsRequired();
            Property(x => x.CorrelationWeekday).HasColumnName(@"CorrelationWeekday").HasColumnType("int").IsOptional();
            Property(x => x.CorrelationSlope).HasColumnName(@"CorrelationSlope").HasColumnType("decimal").IsOptional().HasPrecision(26,8);
            Property(x => x.CorrelationConstant).HasColumnName(@"CorrelationConstant").HasColumnType("decimal").IsOptional().HasPrecision(26,8);
            Property(x => x.CorrelationDetermination).HasColumnName(@"CorrelationDetermination").HasColumnType("decimal").IsOptional().HasPrecision(26,8);
            Property(x => x.Machine_id).HasColumnName(@"Machine_id").HasColumnType("int").IsRequired();
            Property(x => x.ProductCode).HasColumnName(@"ProductCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.MaterialID).HasColumnName(@"MaterialID").HasColumnType("nvarchar").IsOptional().HasMaxLength(10);
            Property(x => x.ForecastQuantityPoints).HasColumnName(@"ForecastQuantityPoints").HasColumnType("varbinary(max)").IsRequired();
            Property(x => x.ValueDayTurnover).HasColumnName(@"ValueDayTurnover").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.StockQuantity).HasColumnName(@"StockQuantity").HasColumnType("int").IsOptional();
            Property(x => x.StockValue).HasColumnName(@"StockValue").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.DailyMachineRecord_id).HasColumnName(@"DailyMachineRecord_id").HasColumnType("int").IsRequired();
            Property(x => x.EventFactor).HasColumnName(@"EventFactor").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.IsTurnoverFixed).HasColumnName(@"IsTurnoverFixed").HasColumnType("bit").IsRequired();
            Property(x => x.ForecastValuePoints).HasColumnName(@"ForecastValuePoints").HasColumnType("varbinary(max)").IsOptional();
            Property(x => x.IsMixed).HasColumnName(@"IsMixed").HasColumnType("bit").IsRequired();
            Property(x => x.MaterialTypeCode).HasColumnName(@"MaterialTypeCode").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.WeightDayTurnover).HasColumnName(@"WeightDayTurnover").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
            Property(x => x.ForecastWeightPoints).HasColumnName(@"ForecastWeightPoints").HasColumnType("varbinary(max)").IsOptional();
            Property(x => x.CurrencyCode).HasColumnName(@"CurrencyCode").HasColumnType("nvarchar").IsRequired().HasMaxLength(3);
            Property(x => x.StockWeight).HasColumnName(@"StockWeight").HasColumnType("decimal").IsRequired().HasPrecision(26,8);
        }
    }

}
// </auto-generated>
