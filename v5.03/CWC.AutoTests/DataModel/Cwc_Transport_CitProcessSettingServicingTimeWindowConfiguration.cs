// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // Cwc_Transport_CitProcessSettingServicingTimeWindow
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class Cwc_Transport_CitProcessSettingServicingTimeWindowConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Cwc_Transport_CitProcessSettingServicingTimeWindow>
    {
        public Cwc_Transport_CitProcessSettingServicingTimeWindowConfiguration()
            : this("dbo")
        {
        }

        public Cwc_Transport_CitProcessSettingServicingTimeWindowConfiguration(string schema)
        {
            ToTable("Cwc_Transport_CitProcessSettingServicingTimeWindow", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.OrderType).HasColumnName(@"OrderType").HasColumnType("int").IsOptional();
            Property(x => x.TimeFrom).HasColumnName(@"TimeFrom").HasColumnType("float").IsRequired();
            Property(x => x.TimeTo).HasColumnName(@"TimeTo").HasColumnType("float").IsRequired();
            Property(x => x.Weekday).HasColumnName(@"Weekday").HasColumnType("int").IsRequired();
            Property(x => x.CitProcessSettingID).HasColumnName(@"CitProcessSettingID").HasColumnType("int").IsRequired();
            Property(x => x.ServiceTypeID).HasColumnName(@"ServiceTypeID").HasColumnType("int").IsOptional();
            Property(x => x.IsDefault).HasColumnName(@"IsDefault").HasColumnType("bit").IsRequired();
            Property(x => x.TimeSecondFrom).HasColumnName(@"TimeSecondFrom").HasColumnType("time").IsOptional();
            Property(x => x.TimeSecondTo).HasColumnName(@"TimeSecondTo").HasColumnType("time").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.AuthorID).HasColumnName(@"AuthorID").HasColumnType("int").IsOptional();
            Property(x => x.EditorID).HasColumnName(@"EditorID").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
