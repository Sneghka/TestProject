// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CashCenter_Banknote
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CashCenter_BanknoteConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CashCenter_Banknote>
    {
        public WP_CashCenter_BanknoteConfiguration()
            : this("dbo")
        {
        }

        public WP_CashCenter_BanknoteConfiguration(string schema)
        {
            ToTable("WP_CashCenter_Banknote", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.Author_id).HasColumnName(@"Author_id").HasColumnType("int").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.Editor_id).HasColumnName(@"Editor_id").HasColumnType("int").IsRequired();
            Property(x => x.MaterialID).HasColumnName(@"MaterialID").HasColumnType("nvarchar").IsRequired().HasMaxLength(10);
            Property(x => x.StockContainerID).HasColumnName(@"StockContainerID").HasColumnType("bigint").IsOptional();
            Property(x => x.StockLocationID).HasColumnName(@"StockLocationID").HasColumnType("int").IsRequired();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.QualificationType).HasColumnName(@"QualificationType").HasColumnType("int").IsRequired();
            Property(x => x.SealbagID).HasColumnName(@"SealbagID").HasColumnType("bigint").IsOptional();
            Property(x => x.DailyHeaderCardID).HasColumnName(@"DailyHeaderCardID").HasColumnType("int").IsOptional();
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
            Property(x => x.IsACH).HasColumnName(@"IsACH").HasColumnType("bit").IsRequired();
            Property(x => x.IsDomestic).HasColumnName(@"IsDomestic").HasColumnType("bit").IsRequired();
            Property(x => x.BankAccountDebtor).HasColumnName(@"BankAccountDebtor").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.Value).HasColumnName(@"Value").HasColumnType("numeric").IsOptional().HasPrecision(15,2);
            Property(x => x.BanknoteNumberPresence).HasColumnName(@"BanknoteNumberPresence").HasColumnType("int").IsOptional();
            Property(x => x.PlateNumberPresence).HasColumnName(@"PlateNumberPresence").HasColumnType("int").IsOptional();
            Property(x => x.PlateNumber).HasColumnName(@"PlateNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.SeriesID).HasColumnName(@"SeriesID").HasColumnType("int").IsOptional();
        }
    }

}
// </auto-generated>
