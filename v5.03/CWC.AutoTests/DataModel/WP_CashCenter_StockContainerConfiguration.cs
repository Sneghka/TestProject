// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CashCenter_StockContainer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CashCenter_StockContainerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CashCenter_StockContainer>
    {
        public WP_CashCenter_StockContainerConfiguration()
            : this("dbo")
        {
        }

        public WP_CashCenter_StockContainerConfiguration(string schema)
        {
            ToTable("WP_CashCenter_StockContainer", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Number).HasColumnName(@"Number").HasColumnType("nvarchar").IsRequired().HasMaxLength(100);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsOptional();
            Property(x => x.PreannouncementType).HasColumnName(@"PreannouncementType").HasColumnType("int").IsOptional();
            Property(x => x.ServiceDate).HasColumnName(@"ServiceDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsOptional();
            Property(x => x.TotalQuantity).HasColumnName(@"TotalQuantity").HasColumnType("int").IsRequired();
            Property(x => x.TotalValue).HasColumnName(@"TotalValue").HasColumnType("numeric").IsRequired().HasPrecision(15,2);
            Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("numeric").IsRequired().HasPrecision(15,5);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsRequired();
            Property(x => x.StockOrder_id).HasColumnName(@"StockOrder_id").HasColumnType("bigint").IsOptional();
            Property(x => x.ParentContainer_id).HasColumnName(@"ParentContainer_id").HasColumnType("bigint").IsOptional();
            Property(x => x.DestinationStockLocation_id).HasColumnName(@"DestinationStockLocation_id").HasColumnType("int").IsOptional();
            Property(x => x.LocationFrom_id).HasColumnName(@"LocationFrom_id").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.LocationTo_id).HasColumnName(@"LocationTo_id").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.ContainersBatch_id).HasColumnName(@"ContainersBatch_id").HasColumnType("bigint").IsOptional();
            Property(x => x.IsExpected).HasColumnName(@"IsExpected").HasColumnType("bit").IsRequired();
            Property(x => x.StockLocation_id).HasColumnName(@"StockLocation_id").HasColumnType("int").IsOptional();
            Property(x => x.IsOpen).HasColumnName(@"IsOpen").HasColumnType("bit").IsRequired();
            Property(x => x.Author_id).HasColumnName(@"Author_id").HasColumnType("int").IsOptional();
            Property(x => x.Editor_id).HasColumnName(@"Editor_id").HasColumnType("int").IsOptional();
            Property(x => x.DeclaredTotalInners).HasColumnName(@"DeclaredTotalInners").HasColumnType("int").IsOptional();
            Property(x => x.ActualTotalInners).HasColumnName(@"ActualTotalInners").HasColumnType("int").IsOptional();
            Property(x => x.IsMissing).HasColumnName(@"IsMissing").HasColumnType("bit").IsRequired();
            Property(x => x.PickListNumber).HasColumnName(@"PickListNumber").HasColumnType("bigint").IsOptional();
            Property(x => x.BagTypeID).HasColumnName(@"BagTypeID").HasColumnType("int").IsOptional();
            Property(x => x.OrdersBatch).HasColumnName(@"OrdersBatch").HasColumnType("bigint").IsOptional();
            Property(x => x.IsMisscan).HasColumnName(@"IsMisscan").HasColumnType("bit").IsRequired();
            Property(x => x.DateCollected).HasColumnName(@"DateCollected").HasColumnType("datetime").IsOptional();
            Property(x => x.CustomerReference1).HasColumnName(@"CustomerReference1").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.CustomerReference2).HasColumnName(@"CustomerReference2").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.AutomateID).HasColumnName(@"AutomateID").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.TillID).HasColumnName(@"TillID").HasColumnType("nvarchar(max)").IsOptional();
            Property(x => x.PermanentNumber).HasColumnName(@"PermanentNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.IsMultiEnvelope).HasColumnName(@"IsMultiEnvelope").HasColumnType("bit").IsRequired();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.IsPreCrediting).HasColumnName(@"IsPreCrediting").HasColumnType("bit").IsRequired();
            Property(x => x.IsCancelled).HasColumnName(@"IsCancelled").HasColumnType("bit").IsRequired();
            Property(x => x.IsForDispatching).HasColumnName(@"IsForDispatching").HasColumnType("bit").IsRequired();
            Property(x => x.IsDetonated).HasColumnName(@"IsDetonated").HasColumnType("bit").IsRequired();
            Property(x => x.SecondNumber).HasColumnName(@"SecondNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(100);
            Property(x => x.IsOnHold).HasColumnName(@"IsOnHold").HasColumnType("bit").IsRequired();
            Property(x => x.CapturingBatch_id).HasColumnName(@"CapturingBatch_id").HasColumnType("bigint").IsOptional();
            Property(x => x.TransactionDate).HasColumnName(@"TransactionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.BankAccountNumber).HasColumnName(@"BankAccountNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.IsDestroyed).HasColumnName(@"IsDestroyed").HasColumnType("bit").IsRequired();
            Property(x => x.BankAccountID).HasColumnName(@"BankAccountID").HasColumnType("int").IsOptional();
            Property(x => x.ServiceOrderID).HasColumnName(@"ServiceOrderID").HasColumnType("nvarchar").IsOptional().HasMaxLength(256);
            Property(x => x.MasterRouteID).HasColumnName(@"MasterRouteID").HasColumnType("int").IsOptional();
            Property(x => x.DispatchOrderID).HasColumnName(@"DispatchOrderID").HasColumnType("bigint").IsOptional();
        }
    }

}
// </auto-generated>
