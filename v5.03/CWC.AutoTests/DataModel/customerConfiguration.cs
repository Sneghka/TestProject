// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // customer
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class customerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<customer>
    {
        public customerConfiguration()
            : this("dbo")
        {
        }

        public customerConfiguration(string schema)
        {
            ToTable("customer", schema);
            HasKey(x => x.id);

            Property(x => x.abbrev).HasColumnName(@"abbrev").HasColumnType("nvarchar").IsOptional().HasMaxLength(32);
            Property(x => x.csgrp_cd).HasColumnName(@"csgrp_cd").HasColumnType("nvarchar").IsOptional().HasMaxLength(6);
            Property(x => x.cus_nr).HasColumnName(@"cus_nr").HasColumnType("numeric").IsRequired().HasPrecision(15,0);
            Property(x => x.fax).HasColumnName(@"fax").HasColumnType("nvarchar").IsOptional().HasMaxLength(40);
            Property(x => x.name).HasColumnName(@"name").HasColumnType("nvarchar").IsRequired().HasMaxLength(80);
            Property(x => x.pcode_pb).HasColumnName(@"pcode_pb").HasColumnType("nvarchar").IsOptional().HasMaxLength(16);
            Property(x => x.pcode_st).HasColumnName(@"pcode_st").HasColumnType("nvarchar").IsOptional().HasMaxLength(16);
            Property(x => x.phone).HasColumnName(@"phone").HasColumnType("nvarchar").IsOptional().HasMaxLength(40);
            Property(x => x.pobox).HasColumnName(@"pobox").HasColumnType("nvarchar").IsOptional().HasMaxLength(16);
            Property(x => x.street).HasColumnName(@"street").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.town_pb).HasColumnName(@"town_pb").HasColumnType("nvarchar").IsOptional().HasMaxLength(60);
            Property(x => x.town_st).HasColumnName(@"town_st").HasColumnType("nvarchar").IsOptional().HasMaxLength(60);
            Property(x => x.e_mail).HasColumnName(@"e_mail").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.repr).HasColumnName(@"repr").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.acc_man).HasColumnName(@"acc_man").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.national).HasColumnName(@"national").HasColumnType("bit").IsOptional();
            Property(x => x.area_pc).HasColumnName(@"area_pc").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.det_pc).HasColumnName(@"det_pc").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.street_det).HasColumnName(@"street_det").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.county).HasColumnName(@"county").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.cus_cd).HasColumnName(@"cus_cd").HasColumnType("nvarchar").IsOptional().HasMaxLength(20);
            Property(x => x.inactive).HasColumnName(@"inactive").HasColumnType("bit").IsOptional();
            Property(x => x.msCode).HasColumnName(@"msCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(8);
            Property(x => x.enabled).HasColumnName(@"enabled").HasColumnType("bit").IsRequired();
            Property(x => x.Country).HasColumnName(@"Country").HasColumnType("nvarchar").IsOptional().HasMaxLength(80);
            Property(x => x.WP_RecordType).HasColumnName(@"WP_RecordType").HasColumnType("int").IsRequired();
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.Chamber).HasColumnName(@"Chamber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(30);
            Property(x => x.Website).HasColumnName(@"Website").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(80);
            Property(x => x.ParentCustomer).HasColumnName(@"ParentCustomer").HasColumnType("decimal").IsOptional().HasPrecision(18,0);
            Property(x => x.InvoiceReference).HasColumnName(@"InvoiceReference").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.InboundReference).HasColumnName(@"InboundReference").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.OutboundReference).HasColumnName(@"OutboundReference").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.Code).HasColumnName(@"Code").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.IBANBankIdentifier).HasColumnName(@"IBANBankIdentifier").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.LedgerCode).HasColumnName(@"LedgerCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.VATCode).HasColumnName(@"VATCode").HasColumnType("nvarchar").IsOptional().HasMaxLength(255);
            Property(x => x.Debtor).HasColumnName(@"Debtor").HasColumnType("decimal").IsOptional().HasPrecision(15,0);
            Property(x => x.PreferredLanguage).HasColumnName(@"PreferredLanguage").HasColumnType("int").IsRequired();
            Property(x => x.ReferenceNumber).HasColumnName(@"ReferenceNumber").HasColumnType("nvarchar").IsRequired().HasMaxLength(30);
            Property(x => x.OutboundStreamIDForCoins).HasColumnName(@"OutboundStreamIDForCoins").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.OutboundStreamIDForNotes).HasColumnName(@"OutboundStreamIDForNotes").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.AffiliatedBankID).HasColumnName(@"AffiliatedBankID").HasColumnType("numeric").IsOptional().HasPrecision(18,0);
            Property(x => x.IBANFormatID).HasColumnName(@"IBANFormatID").HasColumnType("int").IsOptional();
            Property(x => x.ChequeFormatID).HasColumnName(@"ChequeFormatID").HasColumnType("int").IsOptional();
            Property(x => x.id).HasColumnName(@"id").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IsLinkLocationToRegionsAllowed).HasColumnName(@"IsLinkLocationToRegionsAllowed").HasColumnType("bit").IsOptional();
        }
    }

}
// </auto-generated>
