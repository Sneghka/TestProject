// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace CWC.AutoTests.DataModel
{

    // WP_CashCenter_StockTransaction
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.33.0.0")]
    public class WP_CashCenter_StockTransactionConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<WP_CashCenter_StockTransaction>
    {
        public WP_CashCenter_StockTransactionConfiguration()
            : this("dbo")
        {
        }

        public WP_CashCenter_StockTransactionConfiguration(string schema)
        {
            ToTable("WP_CashCenter_StockTransaction", schema);
            HasKey(x => x.id);

            Property(x => x.id).HasColumnName(@"id").HasColumnType("bigint").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.Type).HasColumnName(@"Type").HasColumnType("int").IsRequired();
            Property(x => x.Status).HasColumnName(@"Status").HasColumnType("int").IsRequired();
            Property(x => x.StartDate).HasColumnName(@"StartDate").HasColumnType("datetime").IsRequired();
            Property(x => x.EndDate).HasColumnName(@"EndDate").HasColumnType("datetime").IsOptional();
            Property(x => x.TotalQuantity).HasColumnName(@"TotalQuantity").HasColumnType("int").IsRequired();
            Property(x => x.TotalValue).HasColumnName(@"TotalValue").HasColumnType("numeric").IsRequired().HasPrecision(15,2);
            Property(x => x.TotalWeight).HasColumnName(@"TotalWeight").HasColumnType("numeric").IsRequired().HasPrecision(15,5);
            Property(x => x.DateCreated).HasColumnName(@"DateCreated").HasColumnType("datetime").IsRequired();
            Property(x => x.DateUpdated).HasColumnName(@"DateUpdated").HasColumnType("datetime").IsOptional();
            Property(x => x.StockOrder_id).HasColumnName(@"StockOrder_id").HasColumnType("bigint").IsOptional();
            Property(x => x.Site_id).HasColumnName(@"Site_id").HasColumnType("int").IsOptional();
            Property(x => x.Author_id).HasColumnName(@"Author_id").HasColumnType("int").IsOptional();
            Property(x => x.Editor_id).HasColumnName(@"Editor_id").HasColumnType("int").IsOptional();
            Property(x => x.ContainersBatch_id).HasColumnName(@"ContainersBatch_id").HasColumnType("bigint").IsOptional();
            Property(x => x.StockOwner_id).HasColumnName(@"StockOwner_id").HasColumnType("int").IsOptional();
            Property(x => x.StockLocation_id).HasColumnName(@"StockLocation_id").HasColumnType("int").IsOptional();
            Property(x => x.DestinationStockLocationID).HasColumnName(@"DestinationStockLocationID").HasColumnType("int").IsOptional();
            Property(x => x.StockContainerID).HasColumnName(@"StockContainerID").HasColumnType("bigint").IsOptional();
            Property(x => x.LocationToID).HasColumnName(@"LocationToID").HasColumnType("numeric").IsOptional().HasPrecision(15,0);
            Property(x => x.UID).HasColumnName(@"UID").HasColumnType("uniqueidentifier").IsRequired();
            Property(x => x.StockOwnerSellerID).HasColumnName(@"StockOwnerSellerID").HasColumnType("int").IsOptional();
            Property(x => x.MachineNumber).HasColumnName(@"MachineNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
            Property(x => x.DailyHeaderCardID).HasColumnName(@"DailyHeaderCardID").HasColumnType("int").IsOptional();
            Property(x => x.TransactionDate).HasColumnName(@"TransactionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.Flow).HasColumnName(@"Flow").HasColumnType("int").IsOptional();
            Property(x => x.SequenceNumber).HasColumnName(@"SequenceNumber").HasColumnType("nvarchar").IsOptional().HasMaxLength(30);
        }
    }

}
// </auto-generated>
