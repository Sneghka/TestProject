// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Specflow.Automation.Backend.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Xunit.TraitAttribute("Category", "cashcenter-data-generation-required")]
    [Xunit.TraitAttribute("Category", "contract-data-generation-required")]
    [Xunit.TraitAttribute("Category", "transport-data-clearing-required")]
    public partial class CashCenterOrderAllocationFeature : Xunit.IClassFixture<CashCenterOrderAllocationFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "CashCenterOrderAllocation.feature"
#line hidden
        
        public CashCenterOrderAllocationFeature(CashCenterOrderAllocationFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CashCenterOrderAllocation", "\t\tAs a cash center operator \r\n\t\tI want service orders to be allocated into correc" +
                    "t outbound orders\r\n\t\tSo that requested items can be properly prepared for delive" +
                    "ry", ProgrammingLanguage.CSharp, new string[] {
                        "cashcenter-data-generation-required",
                        "contract-data-generation-required",
                        "transport-data-clearing-required"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by notes cash center")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by notes cash center")]
        public virtual void AllocateServiceOrderForServicePointServicedByNotesCashCenter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by notes cash center", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table1.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2",
                        "false"});
            table1.AddRow(new string[] {
                        "100 EUR Bundle",
                        "2",
                        "false"});
#line 10
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5505ATM01\' location", ((string)(null)), table1, "Given ");
#line 14
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
  testRunner.Then("System creates outbound order for \'NCC\' cash center and \'5505ATM01\' location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table2.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 16
   testRunner.And("Outbound order got correct quantity, value and weight", ((string)(null)), table2, "And ");
#line 19
   testRunner.And("System creates 1 CC Orders Allocation Log record with \'Ok\' result for current ser" +
                    "vice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by coins cash center")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by coins cash center")]
        public virtual void AllocateServiceOrderForServicePointServicedByCoinsCashCenter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by coins cash center", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table3.AddRow(new string[] {
                        "1 EUR Roll",
                        "2",
                        "false"});
            table3.AddRow(new string[] {
                        "2 EUR Roll",
                        "2",
                        "false"});
#line 22
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5506ATM01\' location", ((string)(null)), table3, "Given ");
#line 26
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
  testRunner.Then("System creates outbound order for \'CCC\' cash center and \'5506ATM01\' location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table4.AddRow(new string[] {
                        "4",
                        "150",
                        "0.8"});
#line 28
   testRunner.And("Outbound order got correct quantity, value and weight", ((string)(null)), table4, "And ");
#line 31
   testRunner.And("System creates 1 CC Orders Allocation Log record with \'Ok\' result for current ser" +
                    "vice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by foreign currency cash center" +
            "s")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by foreign currency cash center" +
            "s")]
        public virtual void AllocateServiceOrderForServicePointServicedByForeignCurrencyCashCenters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by foreign currency cash center" +
                    "s", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table5.AddRow(new string[] {
                        "10 USD Bundle",
                        "2",
                        "false"});
            table5.AddRow(new string[] {
                        "100 USD Bundle",
                        "2",
                        "false"});
#line 34
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM01\' location", ((string)(null)), table5, "Given ");
#line 38
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
  testRunner.Then("System creates outbound order for \'FCC\' cash center and \'5507ATM01\' location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table6.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 40
   testRunner.And("Outbound order got correct quantity, value and weight", ((string)(null)), table6, "And ");
#line 43
   testRunner.And("System creates 1 CC Orders Allocation Log record with \'Ok\' result for current ser" +
                    "vice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by notes and coins cash centers" +
            "")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by notes and coins cash centers" +
            "")]
        public virtual void AllocateServiceOrderForServicePointServicedByNotesAndCoinsCashCenters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by notes and coins cash centers" +
                    "", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table7.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2",
                        "false"});
            table7.AddRow(new string[] {
                        "100 EUR Bundle",
                        "2",
                        "false"});
            table7.AddRow(new string[] {
                        "1 EUR Roll",
                        "2",
                        "false"});
            table7.AddRow(new string[] {
                        "2 EUR Roll",
                        "2",
                        "false"});
#line 46
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM02\' location", ((string)(null)), table7, "Given ");
#line 52
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
  testRunner.Then("System creates 2 outbound orders for current service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table8.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 54
   testRunner.And("Outbound order for \'NCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table9.AddRow(new string[] {
                        "4",
                        "150",
                        "0.8"});
#line 57
   testRunner.And("Outbound order for \'CCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table9, "And ");
#line 60
   testRunner.And("System creates 2 CC Orders Allocation Log records with \'Ok\' result for current se" +
                    "rvice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by notes and foreign currency c" +
            "ash centers")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by notes and foreign currency c" +
            "ash centers")]
        public virtual void AllocateServiceOrderForServicePointServicedByNotesAndForeignCurrencyCashCenters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by notes and foreign currency c" +
                    "ash centers", null, ((string[])(null)));
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table10.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2",
                        "false"});
            table10.AddRow(new string[] {
                        "100 EUR Bundle",
                        "2",
                        "false"});
            table10.AddRow(new string[] {
                        "10 USD Bundle",
                        "2",
                        "false"});
            table10.AddRow(new string[] {
                        "100 USD Bundle",
                        "2",
                        "false"});
#line 63
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM03\' location", ((string)(null)), table10, "Given ");
#line 69
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
  testRunner.Then("System creates 2 outbound orders for current service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table11.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 71
   testRunner.And("Outbound order for \'NCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table11, "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table12.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 74
   testRunner.And("Outbound order for \'FCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table12, "And ");
#line 77
   testRunner.And("System creates 2 CC Orders Allocation Log records with \'Ok\' result for current se" +
                    "rvice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point serviced by coins and foreign currency c" +
            "ash centers")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point serviced by coins and foreign currency c" +
            "ash centers")]
        public virtual void AllocateServiceOrderForServicePointServicedByCoinsAndForeignCurrencyCashCenters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point serviced by coins and foreign currency c" +
                    "ash centers", null, ((string[])(null)));
#line 79
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table13.AddRow(new string[] {
                        "1 EUR Roll",
                        "2",
                        "false"});
            table13.AddRow(new string[] {
                        "2 EUR Roll",
                        "2",
                        "false"});
            table13.AddRow(new string[] {
                        "10 USD Bundle",
                        "2",
                        "false"});
            table13.AddRow(new string[] {
                        "100 USD Bundle",
                        "2",
                        "false"});
#line 80
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM04\' location", ((string)(null)), table13, "Given ");
#line 86
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
  testRunner.Then("System creates 2 outbound orders for current service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table14.AddRow(new string[] {
                        "4",
                        "150",
                        "0.8"});
#line 88
   testRunner.And("Outbound order for \'CCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table15.AddRow(new string[] {
                        "4",
                        "22000",
                        "0.4"});
#line 91
   testRunner.And("Outbound order for \'FCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table15, "And ");
#line 94
   testRunner.And("System creates 2 CC Orders Allocation Log records with \'Ok\' result for current se" +
                    "rvice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order for service point not serviced by any site")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order for service point not serviced by any site")]
        public virtual void AllocateServiceOrderForServicePointNotServicedByAnySite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order for service point not serviced by any site", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose"});
            table16.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2",
                        "false"});
#line 97
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM99\' location", ((string)(null)), table16, "Given ");
#line 100
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
  testRunner.Then("System creates 1 CC Orders Allocation Log record with \'Failed\' result for current" +
                    " service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Message"});
            table17.AddRow(new string[] {
                        "Order ‘{0}’ cannot be allocated - no stream is found per CC site(s) configurated " +
                            "at location ‘5507ATM99’."});
#line 102
   testRunner.And("CC Orders Allocation Log record got following message", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order with all kind of products for service point serviced by no" +
            "tes, coins and foreign currency cash centers")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order with all kind of products for service point serviced by no" +
            "tes, coins and foreign currency cash centers")]
        public virtual void AllocateServiceOrderWithAllKindOfProductsForServicePointServicedByNotesCoinsAndForeignCurrencyCashCenters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order with all kind of products for service point serviced by no" +
                    "tes, coins and foreign currency cash centers", null, ((string[])(null)));
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity",
                        "IsLoose",
                        "IsBarcoded"});
            table18.AddRow(new string[] {
                        "1 EUR Roll",
                        "2",
                        "false",
                        "false"});
            table18.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2",
                        "false",
                        "false"});
            table18.AddRow(new string[] {
                        "1 USD Roll",
                        "2",
                        "false",
                        "false"});
            table18.AddRow(new string[] {
                        "10 USD Bundle",
                        "2",
                        "false",
                        "false"});
            table18.AddRow(new string[] {
                        "1 EUR Barcoded Bundle",
                        "2",
                        "false",
                        "true"});
            table18.AddRow(new string[] {
                        "10 EUR Barcoded Bundle",
                        "2",
                        "false",
                        "true"});
            table18.AddRow(new string[] {
                        "1 USD Barcoded Bundle",
                        "2",
                        "false",
                        "true"});
            table18.AddRow(new string[] {
                        "10 USD Barcoded Bundle",
                        "2",
                        "false",
                        "true"});
            table18.AddRow(new string[] {
                        "1 EUR Loose Product",
                        "2",
                        "true",
                        "false"});
            table18.AddRow(new string[] {
                        "20 EUR Loose Product",
                        "2",
                        "true",
                        "false"});
            table18.AddRow(new string[] {
                        "1 USD Loose Product",
                        "2",
                        "true",
                        "false"});
            table18.AddRow(new string[] {
                        "20 USD Loose Product",
                        "2",
                        "true",
                        "false"});
#line 107
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5507ATM05\' location", ((string)(null)), table18, "Given ");
#line 121
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 122
  testRunner.Then("System creates 10 outbound orders for current service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table19.AddRow(new string[] {
                        "2",
                        "2000",
                        "0.2"});
#line 123
   testRunner.And("Outbound order for \'NCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table20.AddRow(new string[] {
                        "2",
                        "200",
                        "0.02"});
#line 126
   testRunner.And("Outbound order for \'NCC\' cash center and barcoded products got correct quantity, " +
                    "value and weight", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table21.AddRow(new string[] {
                        "2",
                        "4000",
                        "0.2"});
#line 129
   testRunner.And("Outbound order for \'NCC\' cash center and notes loose products got correct quantit" +
                    "y, value and weight", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table22.AddRow(new string[] {
                        "2",
                        "50",
                        "0.375"});
#line 132
   testRunner.And("Outbound order for \'CCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table22, "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table23.AddRow(new string[] {
                        "2",
                        "20",
                        "0.15"});
#line 135
   testRunner.And("Outbound order for \'CCC\' cash center and barcoded products got correct quantity, " +
                    "value and weight", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table24.AddRow(new string[] {
                        "2",
                        "200",
                        "1.5"});
#line 138
   testRunner.And("Outbound order for \'CCC\' cash center and coins loose products got correct quantit" +
                    "y, value and weight", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table25.AddRow(new string[] {
                        "4",
                        "2050",
                        "0.575"});
#line 141
   testRunner.And("Outbound order for \'FCC\' cash center and regular products got correct quantity, v" +
                    "alue and weight", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table26.AddRow(new string[] {
                        "4",
                        "220",
                        "0.17"});
#line 144
   testRunner.And("Outbound order for \'FCC\' cash center and barcoded products got correct quantity, " +
                    "value and weight", ((string)(null)), table26, "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table27.AddRow(new string[] {
                        "2",
                        "4000",
                        "0.2"});
#line 147
   testRunner.And("Outbound order for \'FCC\' cash center and notes loose products got correct quantit" +
                    "y, value and weight", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table28.AddRow(new string[] {
                        "2",
                        "200",
                        "1.5"});
#line 150
   testRunner.And("Outbound order for \'FCC\' cash center and coins loose products got correct quantit" +
                    "y, value and weight", ((string)(null)), table28, "And ");
#line 153
   testRunner.And("System creates 10 CC Orders Allocation Log records with \'Ok\' result for current s" +
                    "ervice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Allocate service order with note, coin and foreign currency products for service " +
            "point serviced by notes cash center")]
        [Xunit.TraitAttribute("FeatureTitle", "CashCenterOrderAllocation")]
        [Xunit.TraitAttribute("Description", "Allocate service order with note, coin and foreign currency products for service " +
            "point serviced by notes cash center")]
        public virtual void AllocateServiceOrderWithNoteCoinAndForeignCurrencyProductsForServicePointServicedByNotesCashCenter()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Allocate service order with note, coin and foreign currency products for service " +
                    "point serviced by notes cash center", null, ((string[])(null)));
#line 155
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Product",
                        "Quantity"});
            table29.AddRow(new string[] {
                        "1 EUR Roll",
                        "2"});
            table29.AddRow(new string[] {
                        "10 EUR Bundle",
                        "2"});
            table29.AddRow(new string[] {
                        "10 USD Bundle",
                        "2"});
#line 156
 testRunner.Given("Delivery service order with service date in 0 days, \'Registered\' generic status a" +
                    "nd following content is created for \'5505ATM01\' location", ((string)(null)), table29, "Given ");
#line 161
  testRunner.When("CC Orders Allocation job processes service order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
  testRunner.Then("System creates outbound order for \'NCC\' cash center and \'5505ATM01\' location", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Quantity",
                        "Value",
                        "Weight"});
            table30.AddRow(new string[] {
                        "6",
                        "4050",
                        "0.775"});
#line 163
   testRunner.And("Outbound order got correct quantity, value and weight", ((string)(null)), table30, "And ");
#line 166
   testRunner.And("System creates 1 CC Orders Allocation Log record with \'Ok\' result for current ser" +
                    "vice order", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                CashCenterOrderAllocationFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                CashCenterOrderAllocationFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
